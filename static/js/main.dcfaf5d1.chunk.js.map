{"version":3,"sources":["logo.svg","Pixel.jsx","Grid.jsx","dmxconf.js","scenes.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Pixel","props","style","backgroundColor","color","className","React","Component","rows","width","height","cols","elementLength","rotatingImage","ctx","img","hue","saturation","speed","a","frame","fillStyle","fillRect","update","state","filter","resetTransform","translate","rotate","Math","PI","drawImage","promise","Promise","resolve","loadeded","onload","movingblock","count","distance","delay","hueoffset","console","log","LightenDarkenColor","dColors","Array","from","length","map","e","i","fillBackground","drawhorizontalmovingblockframe","movingblockvertical","drawVerticalmovingBlockFrame","movingblockcross","v3","v1","v2","floor","blocks","square","fillSquare","fps","hueOffset","d","fillPixel","changeHue","x","y","col","amt","usePound","slice","num","parseInt","r","b","g","toString","rgb","degree","hsl","replace","substr","cMax","max","cMin","min","delta","l","h","s","abs","rgbToHSL","c","m","normalize_rgb_value","rgbToHex","hslToRGB","getDMXMessage","context","dmxMessage","imageData","getImageData","conf","data","forEach","row","rowindex","cell","colIndex","index","p","shift","App","storedState","localStorage","JSON","parse","lightness","handleChangeSpeed","bind","handleChangeHue","handleChangeSaturation","handleChangeLightness","handleChangev1","handleChangev2","handleChangev3","bloxhori","bloxcross","bloxvert","rotateImg","squares","event","this","setState","target","value","exampleSocket","WebSocket","onmessage","evt","refs","input","output","getContext","ctxOut","startAnimation","setInterval","fetch","body","join","headers","method","stringify","running","stop","setTimeout","requestAnimationFrame","ref","alt","src","type","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wJAAAA,EAAOC,QAAU,IAA0B,kC,0OCEpC,SAASC,EAAMC,GAElB,IAAMC,EAAQ,CACVC,gBAAiBF,EAAMG,OAAS,QAEpC,OAAO,yBAAKF,MAAOA,EAAOG,UAAU,c,MCFdC,IAAMC,U,ICgBjBC,EArBF,CACT,CAAC,KAAM,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAChH,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAClI,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChK,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IA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","file":"static/js/main.dcfaf5d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Pixel.css';\nexport function Pixel(props) {\n\n    const style = {\n        backgroundColor: props.color || '#000'\n    }\n    return <div style={style} className=\"grz-pixel\"></div>\n}","\nimport React from 'react';\nimport './Grid.css';\nimport { Pixel } from './Pixel';\n\nexport class Grid extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const { width, height } = props;\n\n        const rows = Array\n            .from({\n                length: height\n            })\n            .map(() => Array\n                .from({\n                    length: width\n                }).map(() => ({\n                    color: '#000'\n                })));\n\n        this.state = {}\n    }\n\n    render() {\n        const { width, height } = this.props;\n        const rows = Array\n            .from({\n                length: height\n            })\n            .map(() => Array\n                .from({\n                    length: width\n                }).map(() => ({\n                    color: '#000'\n                })));\n\n        return (<div>\n            {rows.map((row, i) => (<div id={'grz_row_' + i} className=\"grz-grid-row\">\n                {row.map((row, j) => (<Pixel id={'grz_pix_' + j} color={row.color} />))}\n            </div>))}\n        </div>)\n    }\n}\n\nexport default Grid;","const rows = [\n    [null, 1, 4, 7, 10, 13, 16, 19, 22, null, 25, 28, 31, 34, 37, 40, 43, 46, null, 49, 52, 55, 58, 61, 64, 67, 70, null],\n    [217, null, null, null, null, null, null, null, null, 265, null, null, null, null, null, null, null, null, 313, null, null, null, null, null, null, null, null, 362],\n    [220, null, null, null, null, null, null, null, null, 268, null, null, null, null, null, null, null, null, 316, null, null, null, null, null, null, null, null, 365],\n    [223, null, null, null, null, null, null, null, null, 271, null, null, null, null, null, null, null, null, 319, null, null, null, null, null, null, null, null, 368],\n    [226, null, null, null, null, null, null, null, null, 274, null, null, null, null, null, null, null, null, 322, null, null, null, null, null, null, null, null, 371],\n    [229, null, null, null, null, null, null, null, null, 277, null, null, null, null, null, null, null, null, 325, null, null, null, null, null, null, null, null, 374],\n    [232, null, null, null, null, null, null, null, null, 280, null, null, null, null, null, null, null, null, 328, null, null, null, null, null, null, null, null, 377],\n    [235, null, null, null, null, null, null, null, null, 283, null, null, null, null, null, null, null, null, 331, null, null, null, null, null, null, null, null, 380],\n    [238, null, null, null, null, null, null, null, null, 286, null, null, null, null, null, null, null, null, 334, null, null, null, null, null, null, null, null, 383],\n    [null, 73, 76, 79, 82, 85, 88, 91, 94, null, 97, 100, 103, 106, 109, 112, 115, 118, null, 121, 124, 127, 130, 133, 136, 139, 142, null],\n    [241, null, null, null, null, null, null, null, null, 289, null, null, null, null, null, null, null, null, 337, null, null, null, null, null, null, null, null, 386],\n    [244, null, null, null, null, null, null, null, null, 292, null, null, null, null, null, null, null, null, 340, null, null, null, null, null, null, null, null, 389],\n    [247, null, null, null, null, null, null, null, null, 295, null, null, null, null, null, null, null, null, 343, null, null, null, null, null, null, null, null, 392],\n    [250, null, null, null, null, null, null, null, null, 298, null, null, null, null, null, null, null, null, 346, null, null, null, null, null, null, null, null, 395],\n    [253, null, null, null, null, null, null, null, null, 301, null, null, null, null, null, null, null, null, 349, null, null, null, null, null, null, null, null, 398],\n    [256, null, null, null, null, null, null, null, null, 304, null, null, null, null, null, null, null, null, 352, null, null, null, null, null, null, null, null, 401],\n    [259, null, null, null, null, null, null, null, null, 307, null, null, null, null, null, null, null, null, 355, null, null, null, null, null, null, null, null, 404],\n    [262, null, null, null, null, null, null, null, null, 310, null, null, null, null, null, null, null, null, 358, null, null, null, null, null, null, null, null, 407],\n    [null, 145, 148, 151, 154, 157, 160, 163, 166, null, 169, 172, 175, 178, 181, 184, 187, 190, null, 193, 196, 199, 202, 205, 208, 211, 214, null]\n]\nexport default rows;","import knots from './knotmatrix'\n\nlet [width, height, cols, rows, elementLength] = [560, 380, 28, 19, 9];\n\nexport function setDimensions(widthin, heightin, rowsin, colsin, elementLengthin) {\n    width = widthin;\n    height = heightin;\n    rows = rowsin;\n    cols = colsin;\n    elementLength = elementLengthin;\n}\n\nexport async function rotatingImage(ctx, img, hue, saturation, speed) {\n\n    let frame = 0;\n    ctx.fillStyle = '#000'\n    ctx.fillRect(0, 0, width, height)\n    const update = state => {\n        ctx.filter = `saturate(${state.saturation/255}) hue-rotate(${state.hue/255*360}deg)`;\n        ctx.resetTransform();\n        ctx.translate((width / 2), (height / 2))\n        ctx.rotate(frame * Math.PI / 180);\n        ctx.translate(-(width / 2), -(height / 2))\n        ctx.drawImage(img, -width * 0.2, -height * 0.2, width * 1.4, height * 1.4)\n\n        frame++;\n    }\n    const promise = new Promise(resolve => {\n        debugger\n        if (img.loadeded) {\n            ctx.drawImage(img, -width * 0.2, -height * 0.2, width * 1.4, height * 1.4)\n            resolve(update);\n        } else {\n            img.onload = () => {\n                ctx.drawImage(img, -width * 0.2, -height * 0.2, width * 1.4, height * 1.4)\n                resolve(update);\n            }\n        }\n    });\n    return promise;\n}\n\nexport async function movingblock(ctx, count, distance, hue, color, delay, hueoffset) {\n\n    const fps = 60;\n\n    let frame = 0;\n    ctx.fillStyle = '#000'\n\n    console.log(LightenDarkenColor('#f0f', -1))\n    ctx.fillRect(0, 0, width, height)\n    const dColors = Array.from({\n        length: delay\n    }).map((e, i) => LightenDarkenColor(color, delay && -i * 255 / delay))\n    const promise = new Promise(resolve => {\n        const update = state => {\n            fillBackground(ctx, '#000');\n            ctx.filter = `saturate(${state.saturation/255}) hue-rotate(${hue+(state.hue/16*frame)}deg)`;\n            drawhorizontalmovingblockframe(delay, count, frame, distance, fps, ctx, state, dColors, hueoffset);\n\n\n            frame++;\n        }\n        resolve(update);\n\n    });\n    return promise;\n}\n\n\nexport async function movingblockvertical(ctx, count, distance, hue, color, delay, hueoffset) {\n\n    const fps = 60;\n\n    let frame = 0;\n    ctx.fillStyle = '#000'\n\n    console.log(LightenDarkenColor('#f0f', -1))\n    ctx.fillRect(0, 0, width, height)\n    const dColors = Array.from({\n        length: delay\n    }).map((e, i) => LightenDarkenColor(color, delay && -i * 255 / delay))\n    const promise = new Promise(resolve => {\n        const update = state => {\n            fillBackground(ctx, '#000');\n            ctx.filter = `saturate(${state.saturation/255}) hue-rotate(${hue+(state.hue/16*frame)}deg)`;\n            drawVerticalmovingBlockFrame(delay, count, frame, distance, fps, ctx, state, dColors, hueoffset);\n\n\n            frame++;\n        }\n        resolve(update);\n\n    });\n    return promise;\n}\n\nexport async function movingblockcross(ctx, count, distance, hue, color, delay, hueoffset) {\n\n    const fps = 60;\n\n    let frame = 0;\n    ctx.fillStyle = '#000'\n\n    console.log(LightenDarkenColor('#f0f', -1))\n    ctx.fillRect(0, 0, width, height)\n    const promise = new Promise(resolve => {\n        const update = state => {\n            const dColors = Array.from({\n                length: state.v3\n            }).map((e, i) => LightenDarkenColor(color, state.v3 && -i * 255 / state.v3))\n            fillBackground(ctx, '#000');\n            ctx.filter = `saturate(${state.saturation/255}) hue-rotate(${hue+(state.hue/16*frame)}deg)`;\n            drawVerticalmovingBlockFrame(state.v3, state.v1, frame, state.v2, fps, ctx, state, dColors, hueoffset);\n            drawhorizontalmovingblockframe(Math.floor(state.v3 * 0.66), Math.floor(state.v1 * 0.7), frame, state.v2, fps, ctx, state, dColors, hueoffset);\n\n\n            frame++;\n        }\n        resolve(update);\n\n    });\n    return promise;\n}\n\nexport async function blocks(ctx, count, distance, hue, color, delay, hueoffset) {\n\n    const fps = 60;\n\n    let frame = 0;\n    ctx.fillStyle = '#000'\n\n    console.log(LightenDarkenColor('#f0f', -1))\n    ctx.fillRect(0, 0, width, height)\n    const dColors = Array.from({\n        length: delay\n    }).map((e, i) => LightenDarkenColor(color, delay && -i * 255 / delay))\n    const promise = new Promise(resolve => {\n        const update = state => {\n            fillBackground(ctx, '#000');\n            ctx.filter = `saturate(${state.saturation/255}) hue-rotate(${hue+(state.hue/16*frame)}deg)`;\n            const square = [Math.floor(frame * (state.speed / 1024) + 4) % 3, Math.floor(frame * (state.speed / 1024) / 3 + 4) % 2]\n            fillSquare(ctx, square[0], square[1], '#ffff00');\n            fillSquare(ctx, (square[0] + 1) % 3, (square[1] + 1) % 2, '#ffff00');\n            // fillSquare(ctx, (square[0] + 2) % 3, (square[1] + 2) % 2, '#ffff00');\n\n            frame++;\n        }\n        resolve(update);\n\n    });\n    return promise;\n}\n\n\n\nfunction drawhorizontalmovingblockframe(delay, count, frame, distance, fps, ctx, state, dColors, hueOffset) {\n    let d = delay - 1;\n    while (d >= 0) {\n        for (let i = 0; i < count; i++) {\n            if ((frame + i * distance) % fps <= frame + i * distance)\n                fillPixel(ctx, (((frame * state.speed / 64 + i * distance)) % fps - d) / (fps / 3), Math.floor(((frame * state.speed / 64 + i * distance) - d) / fps) % 3, changeHue(dColors[d], hueOffset * i));\n        }\n        d--;\n    }\n}\n\nfunction drawVerticalmovingBlockFrame(delay, count, frame, distance, fps, ctx, state, dColors, hueOffset) {\n    let d = delay - 1;\n    while (d >= 0) {\n        for (let i = 0; i < count; i++) {\n            if ((frame + i * distance) % fps <= frame + i * distance)\n                fillPixel(ctx, (Math.floor(((frame * state.speed / 64 + i * distance) - d) / fps) % 4), ((frame * state.speed / 64 + i * distance) % fps - d) / (fps / 4), changeHue(dColors[d], hueOffset * i));\n        }\n        d--;\n    }\n}\n\nasync function delay(time = 0) {\n    await new Promise(resolve => setTimeout(resolve, time))\n}\n\n\nfunction fillSquare(ctx, x, y, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(x * width / cols * elementLength, y * height / rows * elementLength, width / cols * (elementLength + 1), height / rows * (elementLength + 1));\n}\n\n\n\n\n\nfunction LightenDarkenColor(col, amt) {\n    var usePound = true;\n    if (col[0] === \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n\n    var r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\n\n\nfunction rotateImage(ctx, width, height, img, frame) {\n\n    ctx.resetTransform();\n    ctx.translate(width / 2, height / 2)\n    ctx.rotate(frame * Math.PI / 180);\n    ctx.translate(-width / 2, -height / 2)\n\n    ctx.drawImage(img, 0, 0);\n}\n\n\nfunction fillPixel(ctx, x, y, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(x * width / cols * elementLength, y * height / rows * elementLength, width / cols, height / rows);\n}\n\nfunction fillBar(ctx, x, y, horizontal, color, length = 1) {\n    ctx.fillStyle = color;\n\n    ctx.fillRect(\n        x * width / cols * elementLength,\n        y * height / rows * elementLength,\n        width / cols * length * (horizontal ? elementLength : 1),\n        height / rows * length * (horizontal ? 1 : elementLength)\n    );\n}\n\nfunction fillBackground(ctx, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, width, height);\n}\n// Changes the RGB/HEX temporarily to a HSL - Value, modifies that value\n// and changes it back to RGB/HEX.\nfunction changeHue(rgb, degree) {\n    var hsl = rgbToHSL(rgb);\n    hsl.h += degree;\n    if (hsl.h > 360) {\n        hsl.h -= 360;\n    } else if (hsl.h < 0) {\n        hsl.h += 360;\n    }\n    return hslToRGB(hsl);\n}\n\n// exepcts a string and returns an object\nfunction rgbToHSL(rgb) {\n    // strip the leading # if it's there\n    rgb = rgb.replace(/^\\s*#|\\s*$/g, '');\n\n    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\n    if (rgb.length === 3) {\n        rgb = rgb.replace(/(.)/g, '$1$1');\n    }\n\n    var r = parseInt(rgb.substr(0, 2), 16) / 255,\n        g = parseInt(rgb.substr(2, 2), 16) / 255,\n        b = parseInt(rgb.substr(4, 2), 16) / 255,\n        cMax = Math.max(r, g, b),\n        cMin = Math.min(r, g, b),\n        delta = cMax - cMin,\n        l = (cMax + cMin) / 2,\n        h = 0,\n        s = 0;\n\n    if (delta === 0) {\n        h = 0;\n    } else if (cMax === r) {\n        h = 60 * (((g - b) / delta) % 6);\n    } else if (cMax === g) {\n        h = 60 * (((b - r) / delta) + 2);\n    } else {\n        h = 60 * (((r - g) / delta) + 4);\n    }\n\n    if (delta === 0) {\n        s = 0;\n    } else {\n        s = (delta / (1 - Math.abs(2 * l - 1)))\n    }\n\n    return {\n        h: h,\n        s: s,\n        l: l\n    }\n}\n\n// expects an object and returns a string\nfunction hslToRGB(hsl) {\n    var h = hsl.h,\n        s = hsl.s,\n        l = hsl.l,\n        c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n        m = l - c / 2,\n        r, g, b;\n\n    if (h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else {\n        r = c;\n        g = 0;\n        b = x;\n    }\n\n    r = normalize_rgb_value(r, m);\n    g = normalize_rgb_value(g, m);\n    b = normalize_rgb_value(b, m);\n\n    return rgbToHex(r, g, b);\n}\n\nfunction normalize_rgb_value(color, m) {\n    color = Math.floor((color + m) * 255);\n    if (color < 0) {\n        color = 0;\n    }\n    return color;\n}\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Pixel } from './Pixel';\nimport { Grid } from './Grid';\nimport conf from './dmxconf.js';\nimport { rotatingImage, movingblock, blocks, movingblockvertical, movingblockcross } from './scenes';\n\nfunction getDMXMessage(context) {\n\n  const dmxMessage = [];\n  const imageData = context.getImageData(0, 0, conf[0].length, conf.length).data\n  conf.forEach((row, rowindex) => {\n    row.forEach((cell, colIndex) => {\n\n      // if (colIndex == 27 && rowindex == 1) {\n      //   debugger\n      // }\n      // if (colIndex == 27 && rowindex == 2) {\n      //   debugger\n      // }\n      if (cell && cell > 0) {\n\n\n        const index = (rowindex * conf[0].length + colIndex) * 4\n        var p = imageData.slice(index, index + 4);\n\n        dmxMessage[cell] = Math.floor(p[0])\n        dmxMessage[cell + 1] = Math.floor(p[1])\n        dmxMessage[cell + 2] = Math.floor(p[2])\n        if (cell >= 359 && cell < 362) debugger\n      }\n    });\n  });\n\n  dmxMessage.shift()\n  return dmxMessage;\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    console.log(conf)\n    let storedState = {};\n    if (localStorage.state) {\n      storedState = JSON.parse(localStorage.state);\n    }\n    this.state = {\n      speed: 255,\n      hue: 0,\n      saturation: 255,\n      lightness: 255,\n      v1: 1,\n      v2: 1,\n      v3: 1,\n      ...storedState\n    }\n\n    this.handleChangeSpeed = this.handleChangeSpeed.bind(this);\n    this.handleChangeHue = this.handleChangeHue.bind(this);\n    this.handleChangeSaturation = this.handleChangeSaturation.bind(this);\n    this.handleChangeLightness = this.handleChangeLightness.bind(this);\n    this.handleChangev1 = this.handleChangev1.bind(this);\n    this.handleChangev2 = this.handleChangev2.bind(this);\n    this.handleChangev3 = this.handleChangev3.bind(this);\n\n    this.bloxhori = this.bloxhori.bind(this);\n    this.bloxcross = this.bloxcross.bind(this);\n    this.bloxvert = this.bloxvert.bind(this);\n    this.rotateImg = this.rotateImg.bind(this);\n    this.squares = this.squares.bind(this);\n  }\n\n  handleChangeSpeed(event) {\n    this.setState({ speed: event.target.value });\n  }\n  handleChangeHue(event) {\n    this.setState({ hue: event.target.value });\n  }\n  handleChangeSaturation(event) {\n    this.setState({ saturation: event.target.value });\n  }\n  handleChangeLightness(event) {\n    this.setState({ lightness: event.target.value });\n  }\n\n  handleChangev1(event) {\n    this.setState({ v1: event.target.value });\n  }\n\n  handleChangev2(event) {\n    this.setState({ v2: event.target.value });\n  }\n\n  handleChangev3(event) {\n    this.setState({ v3: event.target.value });\n\n\n  }\n\n  update = () => null\n\n\n  async componentDidMount() {\n    var exampleSocket = new WebSocket('ws:/localhost:3001');\n\n    let socketConnected = false;\n\n    exampleSocket.onmessage = evt => {\n      console.log(evt.data)\n      socketConnected = true;\n    };\n\n\n\n    const { input, output, img } = this.refs;\n    this.ctx = input.getContext(\"2d\")\n    this.ctxOut = output.getContext(\"2d\")\n\n    this.input = input;\n    this.output = output;\n    this.img = img;\n\n    this.img.onload = () => {\n      this.img.loadeded = true\n    }\n\n\n    this.update = await movingblockcross(this.ctx, this.state.v1, this.state.v2, this.state.hue, '#ff00ff', this.state.v3 - 1, 0);\n    this.startAnimation();\n    setInterval(() => {\n      this.ctxOut.filter = `brightness(${this.state.lightness / 255})`;\n      this.ctxOut.drawImage(input, 0, 0, 28, 19);\n\n      // if (socketConnected)\n      //   exampleSocket.send(getDMXMessage(ctxOut).join(','))\n\n      fetch(\"http://localhost:9090/set_dmx\", {\n        body: \"u=1&d=\" + getDMXMessage(this.ctxOut).join(','),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        method: \"POST\"\n      })\n    }, 80);\n\n\n\n  }\n\n  setState(state) {\n    super.setState(state);\n    localStorage.state = JSON.stringify(this.state);\n  }\n\n  startAnimation() {\n    const update = () => {\n\n      let running = true;\n      this.stop = () => running = false;\n\n      this.update(this.state);\n\n      if (running) {\n        setTimeout(() => {\n          requestAnimationFrame(() => update());\n        }, 60)\n      }\n    };\n\n    update();\n  }\n\n  async rotateImg() {\n    this.stop()\n    this.update = await rotatingImage(this.ctx, this.img, this.state.hue, this.state.saturation, this.state.speed);\n    this.startAnimation();\n  }\n\n  async bloxhori() {\n    this.stop()\n    this.update = await movingblock(this.ctx, 8, 19, this.state.hue, '#ff00ff', 12, 5);\n    this.startAnimation();\n  }\n  async bloxvert() {\n    this.stop()\n    this.update = await movingblockvertical(this.ctx, 12, 19, this.state.hue, '#ff00ff', 12, 0);\n    this.startAnimation();\n  }\n  async bloxcross() {\n    this.stop()\n    this.setState({ v1: 14, v2: 18, v3: 12, hue: 0, speed: 73 })\n    this.update = await movingblockcross(this.ctx, this.state.v1, this.state.v2, this.state.hue, '#ff00ff', this.state.v3, 142);\n    this.startAnimation();\n  }\n\n  async squares() {\n    this.stop()\n    this.update = await blocks(this.ctx, 5, 19, this.state.hue, '#ff00ff', 20, 142);\n    this.startAnimation();\n  }\n\n  render() {\n\n    return (<div className=\"App\" >\n      <img ref=\"img\" alt=\"eyo bongo\" src=\"logo512.png\" />\n      <canvas ref=\"input\" width={560} height={380} />\n      <canvas className=\"output\" ref=\"output\" width={28} height={19} />\n\n      <div className=\"row\">\n        <span>\n          <div>speed<input type=\"range\" min=\"0\" max=\"255\" value={this.state.speed} onChange={this.handleChangeSpeed} />{this.state.speed}</div>\n          <div>hue<input type=\"range\" min=\"0\" max=\"255\" value={this.state.hue} onChange={this.handleChangeHue} />{this.state.hue}</div>\n          <div>sat<input type=\"range\" min=\"0\" max=\"255\" value={this.state.saturation} onChange={this.handleChangeSaturation} />{this.state.saturation}</div>\n          <div>light<input type=\"range\" min=\"0\" max=\"255\" value={this.state.lightness} onChange={this.handleChangeLightness} />{this.state.lightness}</div>\n        </span>\n        <span>\n\n          <div>v1<input type=\"range\" min=\"1\" max=\"30\" value={this.state.v1} onChange={this.handleChangev1} />{this.state.v1}</div>\n          <div>v2<input type=\"range\" min=\"1\" max=\"30\" value={this.state.v2} onChange={this.handleChangev2} />{this.state.v2}</div>\n          <div>v3<input type=\"range\" min=\"1\" max=\"30\" value={this.state.v3} onChange={this.handleChangev3} />{this.state.v3}</div>\n        </span>\n\n      </div>\n      <div className=\"row\">\n        <button onClick={this.bloxhori}>bloxhori</button>\n        <button onClick={this.bloxvert}>bloxvert</button>\n        <button onClick={this.bloxcross}>bloxcross</button>\n        <button onClick={this.rotateImg}>rotateImg</button>\n        <button onClick={this.squares}>squares</button>\n      </div>\n\n      <div>\n\n      </div>\n    </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}